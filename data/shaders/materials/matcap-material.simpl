// Matcap material.

/**
 *  Input
 *  -----
 *
 *  sampler[0]  -   textureSampler
 */

@magma:impl:begin geometry

vec2 matcapCoord(vec3 normal) {
    vec4 projection = camera.viewTransform * vec4(normal, 0);
    return projection.xy / 2 + 0.5;
}

bool @magma:impl:main (inout GBufferNode node) {
    vec3 normal = inTbn[2];

    vec2 matcapUv = matcapCoord(normal);
    vec3 color = texture(samplers[0], matcapUv).rgb;

    uint startIndex = 0;
    gBufferPackVec3(node, startIndex, color);

    return false;
}

@magma:impl:end geometry

@magma:impl:begin epiphany

vec4 @magma:impl:main (GBufferNode node) {
    uint startIndex = 0;
    vec3 color = gBufferUnpackVec3(node, startIndex);
    return vec4(color, 1);
}

@magma:impl:end epiphany

 