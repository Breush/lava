#version 460
#extension GL_EXT_ray_tracing : enable

layout(binding = 0, set = 0) uniform accelerationStructureEXT topLevelAS;
layout(binding = 1, set = 0, rgba8) uniform image2D image;

#include "./stages/sets/push-constants.set"
#include "./ray-payload.set"

layout(location = 0) rayPayloadEXT Payload payload;

void main()
{
    setupCamera();

    const vec2 pixelCenter = vec2(gl_LaunchIDEXT.xy) + vec2(0.5);
    const vec2 inUV = pixelCenter / vec2(gl_LaunchSizeEXT.xy);
    vec2 d = inUV * 2.0 - 1.0;

    vec4 origin = camera.viewTransformInverse * vec4(0, 0, 0, 1);
    vec4 target = camera.projectionMatrixInverse * vec4(d.x, d.y, 1, 1) ;
    vec3 direction = mat3(camera.viewTransformInverse) * normalize(target.xyz);

    float tmin = 0.001;
    float tmax = 10000.0;

    // Ambiant Occlusion test!

    payload.color = vec4(vec3(0.0), 1.0);

    traceRayEXT(topLevelAS, gl_RayFlagsOpaqueEXT, 0xFF, 0, 0, 0, origin.xyz, tmin, direction.xyz, tmax, 0);

    imageStore(image, ivec2(gl_LaunchIDEXT.xy), payload.color);
}
