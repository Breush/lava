void setGBufferNodeFromMaterial(uint listIndex, uint next) {
    float depth = gl_FragCoord.z;

    vec3 normal = 2 * texture(tNormalSampler, inUv).rgb - 1;
    normal = (normalize(inTbn * normal) + 1) / 2;
    
    vec4 albedo = texture(albedoSampler, inUv);
    
    vec4 orm = texture(ormSampler, inUv);

    float occlusion = 1;
    occlusion *= orm.r;

    float roughness = material.roughnessFactor;
    roughness *= orm.g;

    float metallic = material.metallicFactor;
    metallic *= orm.b;

    gBufferList.data[listIndex].next = next;
    gBufferList.data[listIndex].depth = depth;
    gBufferList.data[listIndex].opacity = albedo.a;
    gBufferList.data[listIndex].albedo = albedo.rgb;
    gBufferList.data[listIndex].normal = normal;
    gBufferList.data[listIndex].occlusion = occlusion;
    gBufferList.data[listIndex].roughness = roughness;
    gBufferList.data[listIndex].metallic = metallic;
}
