#!/bin/bash

cd $(dirname "$0")/..

mkdir -p build

LIB=$1
LIB_UPPER=${1^^}

BACKEND=$2

AFT_MATCHES=$(grep -r "Aft {" ./source/$LIB/aft-$BACKEND)

AFT_FILES=$(echo "$AFT_MATCHES" | cut -d':' -f 1)
AFT_CLASSES=$(echo "$AFT_MATCHES" | sed -re 's/.*class (\w+).*\{/\1/')

for file in "$AFT_FILES"; do
    file_dependencies=$(g++ -MM $file -I include | sed -e 's/^.*.o: //' | sed -e 's/ //' | sed -e 's/\\//')
    if [ -z "$AFT_FILES_DEPENDENCIES" ]; then
        AFT_FILES_DEPENDENCIES="$file_dependencies"
    else
        AFT_FILES_DEPENDENCIES=$(echo -e "$AFT_FILES_DEPENDENCIES\n$file_dependencies")
    fi
done

AFT_FILES_DEPENDENCIES=$(echo "$AFT_FILES_DEPENDENCIES" | sort | uniq)

# Check if there is an aft file newer than the aft-infos.hpp
if [ -f ./build/.aft-$LIB-timestamp.txt ]; then
    FOUND_NEWER=0
    AFT_INFOS_TIMESTAMP=$(cat ./build/.aft-$LIB-timestamp.txt)
    for file in $AFT_FILES_DEPENDENCIES; do
        AFT_FILE_TIMESTAMP=$(stat $file -c %Y)
        if [ "$AFT_FILE_TIMESTAMP" -ge "$AFT_INFOS_TIMESTAMP" ]; then
            FOUND_NEWER=1
            break
        fi
    done

    if [ "$FOUND_NEWER" -eq "0" ]; then
        exit 0
    fi
fi

echo "$AFT_FILES" | sed -re 's/^(.*)$/#include "\1"/' > ./build/.aft.cpp
echo "#include <iostream>" >> ./build/.aft.cpp
echo "int main(void) {" >> ./build/.aft.cpp
echo "$AFT_CLASSES" | sed -re "s/^(.*)$/    std::cout << \"#define ${LIB_UPPER}_SIZEOF_\1 \" << sizeof(lava::$LIB::\1) << std::endl;/" >> ./build/.aft.cpp
echo "    return 0;" >> ./build/.aft.cpp
echo "}" >> ./build/.aft.cpp

g++ -fmax-errors=1 -O0 -std=c++17 -o ./build/.aft ./build/.aft.cpp -I . -I include -I external/include

if [ "$?" -ne "0" ]; then
    exit 1
fi

echo "// Generated by aft.sh" > ./build/.aft-output.cpp
echo -e "// From $BACKEND backend.\n" >> ./build/.aft-output.cpp
./build/.aft >> ./build/.aft-output.cpp

DIFF="UPDATE"
if [ -f ./include/lava/$LIB/aft-infos.hpp ]; then
    DIFF=$(diff ./build/.aft-output.cpp ./include/lava/$LIB/aft-infos.hpp)
fi

if [ ! -z "$DIFF" ]; then
    cp ./build/.aft-output.cpp ./include/lava/$LIB/aft-infos.hpp
fi

date +"%s" > ./build/.aft-$LIB-timestamp.txt
